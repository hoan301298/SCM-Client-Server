# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build_Server
  displayName: Build Server
  jobs:
  - job: Build_Server
    displayName: Build SCM Server
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'server/pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.9'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        goals: 'package'
        
    - task: CopyFilesOverSSH@0
      displayName: 'Securely copy files to the remote machine'
      inputs:
        sshEndpoint: timoserver
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/server/target/*.?(war|jar)'
        targetFolder: /home/tkapc/server/
        failOnEmptySource: true
        cleanTargetFolder: true

    - task: CopyFiles@2
      displayName: 'Copy Jar Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/scm-server/target/*.?(war|jar)'
        TargetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)
        artifactName: SpringBootBuild

# - stage: Copy_to_Timos_Server
#   displayName: Copy Build to Timos Server
#   jobs:
#   - job: Copy_to_Timos_Server
#     displayName: 'Securely copy files to the remote machine'
#     steps:
#     - task: CopyFilesOverSSH@0
#       inputs:
#         sshEndpoint: timoserver
#         contents:
#           server/target/*.jar
#         sourceFolder: '$(Build.SourcesDirectory)'
#         targetFolder: /home/tkapc/server/
#         cleanTargetFolder: true
#         failOnEmptySource: true